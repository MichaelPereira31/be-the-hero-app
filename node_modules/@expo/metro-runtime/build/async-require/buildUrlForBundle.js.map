{"version":3,"file":"buildUrlForBundle.js","sourceRoot":"","sources":["../../src/async-require/buildUrlForBundle.ts"],"names":[],"mappings":";;;;;;AAAA;;;;;GAKG;AACH,4CAAoB;AAEpB;;;;;GAKG;AACH,SAAgB,iBAAiB,CAC/B,UAAkB,EAClB,SAAwC,EAAE;IAE1C,iFAAiF;IACjF,kFAAkF;IAElF,IAAI,GAAG,GAAG,EAAE,CAAC;IAEb,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;QAC/B,GAAG,IAAI,GAAG,CAAC;KACZ;IAED,MAAM,KAAK,GAAG,YAAE,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAEnC,OAAO,GAAG,GAAG,UAAU,GAAG,SAAS,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACnE,CAAC;AAhBD,8CAgBC","sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport qs from \"qs\";\n\n/**\n * Given a path and some optional additional query parameters, create the dev server bundle URL.\n * @param bundlePath like `/foobar`\n * @param params like `{ platform: \"web\" }`\n * @returns a URL like \"/foobar.bundle?platform=android&modulesOnly=true&runModule=false&runtimeBytecodeVersion=null\"\n */\nexport function buildUrlForBundle(\n  bundlePath: string,\n  params: Record<string, string | null> = {}\n): string {\n  // NOTE(EvanBacon): This must come from the window origin (at least in dev mode).\n  // Otherwise Metro will crash from attempting to load a bundle that doesn't exist.\n\n  let url = \"\";\n\n  if (!bundlePath.startsWith(\"/\")) {\n    url += \"/\";\n  }\n\n  const query = qs.stringify(params);\n\n  return url + bundlePath + \".bundle\" + (query ? \"?\" + query : \"\");\n}\n"]}