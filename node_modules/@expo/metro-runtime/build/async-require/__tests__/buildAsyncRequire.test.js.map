{"version":3,"file":"buildAsyncRequire.test.js","sourceRoot":"","sources":["../../../src/async-require/__tests__/buildAsyncRequire.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { buildAsyncRequire } from \"../buildAsyncRequire\";\nimport { loadBundleAsync } from \"../loadBundle\";\n\nexport const asMock = <T extends (...args: any[]) => any>(\n  fn: T\n): jest.MockedFunction<T> => fn as jest.MockedFunction<T>;\n\njest.mock(\"../loadBundle\", () => ({\n  loadBundleAsync: jest.fn(async () => {}),\n}));\n\nfunction getMockRequire() {\n  const mockRequire: any = jest.fn();\n  mockRequire.importAll = jest.fn();\n\n  return mockRequire;\n}\n\nconst originalEnv = process.env.NODE_ENV;\nbeforeEach(() => {\n  process.env.NODE_ENV = \"development\";\n});\n\nafterAll(() => {\n  process.env.NODE_ENV = originalEnv;\n});\n\nit(`builds required object`, async () => {\n  const _require = getMockRequire();\n  const asyncRequire = buildAsyncRequire(_require);\n\n  expect(asyncRequire).toBeInstanceOf(Function);\n  expect(asyncRequire.prefetch).toBeInstanceOf(Function);\n  expect(asyncRequire.resource).toBeInstanceOf(Function);\n});\n\nit(`loads the module with \\`loadBundleAsync\\` if the module has not been loaded already`, async () => {\n  const _require = getMockRequire();\n  const asyncRequire = buildAsyncRequire(_require);\n\n  const myModule = asyncRequire(650, \"\", { \"650\": \"SixFiveZero\" });\n  expect(myModule).toEqual(expect.any(Promise));\n\n  // Did attempt to fetch the bundle\n  expect(loadBundleAsync).toBeCalledWith(\"SixFiveZero\");\n  expect(_require.importAll).not.toBeCalled();\n});\n\nit(`fetches and returns an async module`, async () => {\n  const _require = getMockRequire();\n\n  asMock(_require).mockReturnValueOnce({ foo: \"bar\" });\n\n  const asyncRequire = buildAsyncRequire(_require);\n\n  expect(asyncRequire).toBeInstanceOf(Function);\n\n  const myModule = await asyncRequire(2, \"\", {\n    \"2\": \"Two\",\n  });\n\n  // Fetch and load the bundle into memory.\n  expect(loadBundleAsync).toBeCalledWith(\"Two\");\n\n  // Ensure the module was required using Metro after the bundle was loaded.\n  expect(_require).toBeCalledWith(2);\n\n  // Ensure the module was returned.\n  expect(myModule).toEqual({ foo: \"bar\" });\n});\n\nit(`disables async requires in production`, async () => {\n  process.env.NODE_ENV = \"production\";\n  const _require = getMockRequire();\n\n  asMock(_require.importAll).mockReturnValueOnce({ foo: \"bar\" });\n\n  const asyncRequire = buildAsyncRequire(_require);\n\n  expect(asyncRequire).toBeInstanceOf(Function);\n\n  const myModule = await asyncRequire(2, \"\", {\n    \"2\": \"Two\",\n  });\n\n  // Fetch and load the bundle into memory.\n  expect(loadBundleAsync).not.toBeCalled();\n\n  // Ensure the module was required using Metro after the bundle was loaded.\n  expect(_require.importAll).toBeCalledWith(2);\n  expect(_require).not.toBeCalled();\n\n  // Ensure the module was returned.\n  expect(myModule).toEqual({ foo: \"bar\" });\n});\n"]}