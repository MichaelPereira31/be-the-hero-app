{"version":3,"file":"loadBundlePolyfill.test.web.js","sourceRoot":"","sources":["../../../src/async-require/__tests__/loadBundlePolyfill.test.web.ts"],"names":[],"mappings":";;;;;AAAA,gEAAwC;AACxC,oEAA4C;AAC5C,oDAAsD;AACtD,8DAAwD;AAExD,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,GAAG,EAAE,CACnC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;IACb,sBAAsB,EAAE,IAAI;IAC5B,aAAa,EACX,sGAAsG;IACxG,GAAG,EAAE,yBAAyB;CAC/B,CAAC,CAAC,CACJ,CAAC;AAEF,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,GAAG,EAAE,CAAC,CAAC;IACnC,kBAAkB,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,IAAI,EAAE,GAAE,CAAC,CAAC;CAC5C,CAAC,CAAC,CAAC;AAEJ,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,cAAc,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AACpE,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,GAAG,EAAE,CAAC,CAAC;IACpC,WAAW,EAAE,IAAI,CAAC,EAAE,EAAE;IACtB,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE;CAChB,CAAC,CAAC,CAAC;AAEJ,EAAE,CAAC,gBAAgB,EAAE,KAAK,IAAI,EAAE;IAC9B,MAAM,IAAA,oCAAe,EAAC,QAAQ,CAAC,CAAC;IAChC,MAAM,CAAC,qBAAW,CAAC,WAAW,CAAC,CAAC,cAAc,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;IACzE,MAAM,CAAC,qBAAW,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE,CAAC;IAC1C,MAAM,GAAG,GAAG,sFAAsF,CAAC;IACnG,MAAM,CAAC,mBAAS,CAAC,cAAc,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;IACrD,MAAM,CAAC,kCAAkB,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC","sourcesContent":["import HMRClient from \"../../HMRClient\";\nimport LoadingView from \"../../LoadingView\";\nimport { fetchThenEvalAsync } from \"../fetchThenEval\";\nimport { loadBundleAsync } from \"../loadBundlePolyfill\";\n\njest.mock(\"../../getDevServer\", () =>\n  jest.fn(() => ({\n    bundleLoadedFromServer: true,\n    fullBundleUrl:\n      \"http://localhost:19000?platform=android&modulesOnly=true&runModule=false&runtimeBytecodeVersion=null\",\n    url: \"http://localhost:19000/\",\n  }))\n);\n\njest.mock(\"../fetchThenEval\", () => ({\n  fetchThenEvalAsync: jest.fn(async () => {}),\n}));\n\njest.mock(\"../../HMRClient\", () => ({ registerBundle: jest.fn() }));\njest.mock(\"../../LoadingView\", () => ({\n  showMessage: jest.fn(),\n  hide: jest.fn(),\n}));\n\nit(\"loads a bundle\", async () => {\n  await loadBundleAsync(\"Second\");\n  expect(LoadingView.showMessage).toBeCalledWith(\"Downloading...\", \"load\");\n  expect(LoadingView.hide).toBeCalledWith();\n  const url = `/Second.bundle?modulesOnly=true&runModule=false&platform=web&runtimeBytecodeVersion=`;\n  expect(HMRClient.registerBundle).toBeCalledWith(url);\n  expect(fetchThenEvalAsync).toBeCalledWith(url);\n});\n"]}