{"version":3,"file":"LogBoxInspectorStackFrame.js","sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorStackFrame.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;GAMG;AACH,kDAA0B;AAC1B,+CAA6E;AAG7E,qDAAkD;AAClD,+DAAiD;AACjD,+CAA4C;AAC5C,oEAAiE;AAOjE,SAAgB,yBAAyB,CAAC,KAAY;IACpD,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC;IACjC,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,IAAI,IAAI,IAAI,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1E,MAAM,QAAQ,GACZ,IAAA,6CAAqB,EAAC,KAAK,CAAC,IAAI,CAAC;QACjC,CAAC,KAAK,CAAC,UAAU,IAAI,IAAI;YACvB,CAAC,CAAC,GAAG;gBACH,KAAK,CAAC,UAAU;gBAChB,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACtD,CAAC,CAAC,EAAE,CAAC,CAAC;IACV,OAAO,CACL,8BAAC,mBAAI,IAAC,KAAK,EAAE,MAAM,CAAC,cAAc;QAChC,8BAAC,2BAAY,IACX,eAAe,EAAE;gBACf,OAAO,EAAE,aAAa;gBACtB,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa;aACrE,EACD,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,MAAM,CAAC,KAAK;YAEnB,8BAAC,mBAAI,IAAC,KAAK,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,KAAK,IAAI,IAAI,MAAM,CAAC,GAAG,CAAC,IAC9D,KAAK,CAAC,UAAU,CACZ;YACP,8BAAC,mBAAI,IACH,aAAa,EAAC,QAAQ,EACtB,aAAa,EAAE,CAAC,EAChB,KAAK,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,KAAK,IAAI,IAAI,MAAM,CAAC,GAAG,CAAC,IAE9D,QAAQ,CACJ,CACM,CACV,CACR,CAAC;AACJ,CAAC;AAjCD,8DAiCC;AAED,MAAM,MAAM,GAAG,yBAAU,CAAC,MAAM,CAAC;IAC/B,cAAc,EAAE;QACd,aAAa,EAAE,KAAK;QACpB,iBAAiB,EAAE,EAAE;KACtB;IACD,KAAK,EAAE;QACL,IAAI,EAAE,CAAC;QACP,eAAe,EAAE,CAAC;QAClB,iBAAiB,EAAE,EAAE;QACrB,YAAY,EAAE,CAAC;KAChB;IACD,YAAY,EAAE;QACZ,aAAa,EAAE,KAAK;KACrB;IACD,IAAI,EAAE;QACJ,KAAK,EAAE,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;QAClC,QAAQ,EAAE,EAAE;QACZ,kBAAkB,EAAE,KAAK;QACzB,UAAU,EAAE,EAAE;QACd,UAAU,EAAE,KAAK;QACjB,UAAU,EAAE,qBAAS;KACtB;IACD,QAAQ,EAAE;QACR,KAAK,EAAE,WAAW,CAAC,YAAY,CAAC,GAAG,CAAC;QACpC,QAAQ,EAAE,EAAE;QACZ,UAAU,EAAE,KAAK;QACjB,kBAAkB,EAAE,KAAK;QACzB,UAAU,EAAE,EAAE;QACd,WAAW,EAAE,EAAE;KAChB;IACD,GAAG,EAAE;QACH,KAAK,EAAE,WAAW,CAAC,YAAY,CAAC,GAAG,CAAC;QACpC,UAAU,EAAE,KAAK;KAClB;IACD,IAAI,EAAE;QACJ,KAAK,EAAE,WAAW,CAAC,YAAY,CAAC,GAAG,CAAC;QACpC,QAAQ,EAAE,EAAE;QACZ,UAAU,EAAE,KAAK;QACjB,kBAAkB,EAAE,KAAK;QACzB,UAAU,EAAE,EAAE;KACf;CACF,CAAC,CAAC","sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from \"react\";\nimport { GestureResponderEvent, StyleSheet, Text, View } from \"react-native\";\nimport { StackFrame } from \"stacktrace-parser\";\n\nimport { LogBoxButton } from \"../UI/LogBoxButton\";\nimport * as LogBoxStyle from \"../UI/LogBoxStyle\";\nimport { CODE_FONT } from \"../UI/constants\";\nimport { formatProjectFileName } from \"../formatProjectFilePath\";\n\ntype Props = {\n  frame: StackFrame & { collapse?: boolean };\n  onPress?: (event: GestureResponderEvent) => void;\n};\n\nexport function LogBoxInspectorStackFrame(props: Props) {\n  const { frame, onPress } = props;\n  const column = frame.column != null && parseInt(String(frame.column), 10);\n  const location =\n    formatProjectFileName(frame.file) +\n    (frame.lineNumber != null\n      ? \":\" +\n        frame.lineNumber +\n        (column && !isNaN(column) ? \":\" + (column + 1) : \"\")\n      : \"\");\n  return (\n    <View style={styles.frameContainer}>\n      <LogBoxButton\n        backgroundColor={{\n          default: \"transparent\",\n          pressed: onPress ? LogBoxStyle.getBackgroundColor(1) : \"transparent\",\n        }}\n        onPress={onPress}\n        style={styles.frame}\n      >\n        <Text style={[styles.name, frame.collapse === true && styles.dim]}>\n          {frame.methodName}\n        </Text>\n        <Text\n          ellipsizeMode=\"middle\"\n          numberOfLines={1}\n          style={[styles.location, frame.collapse === true && styles.dim]}\n        >\n          {location}\n        </Text>\n      </LogBoxButton>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  frameContainer: {\n    flexDirection: \"row\",\n    paddingHorizontal: 15,\n  },\n  frame: {\n    flex: 1,\n    paddingVertical: 4,\n    paddingHorizontal: 10,\n    borderRadius: 5,\n  },\n  lineLocation: {\n    flexDirection: \"row\",\n  },\n  name: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18,\n    fontWeight: \"400\",\n    fontFamily: CODE_FONT,\n  },\n  location: {\n    color: LogBoxStyle.getTextColor(0.8),\n    fontSize: 12,\n    fontWeight: \"300\",\n    includeFontPadding: false,\n    lineHeight: 16,\n    paddingLeft: 10,\n  },\n  dim: {\n    color: LogBoxStyle.getTextColor(0.4),\n    fontWeight: \"300\",\n  },\n  line: {\n    color: LogBoxStyle.getTextColor(0.8),\n    fontSize: 12,\n    fontWeight: \"300\",\n    includeFontPadding: false,\n    lineHeight: 16,\n  },\n});\n"]}